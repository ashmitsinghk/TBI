{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/subhash/tbi/tbi-website/src/components/Button.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: \"outline\" | \"default\";\n  size?: \"lg\" | \"md\" | \"sm\";\n  className?: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  variant = \"default\",\n  size = \"md\",\n  className = \"\",\n  children,\n  ...props\n}) => {\n  let base = \"rounded px-4 py-2 font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 \";\n  let variantClass =\n    variant === \"outline\"\n      ? \"border border-black bg-white text-black hover:bg-gray-100\"\n      : \"bg-black text-white hover:bg-gray-800\";\n  let sizeClass =\n    size === \"lg\"\n      ? \"text-lg px-8 py-3\"\n      : size === \"sm\"\n      ? \"text-sm px-2 py-1\"\n      : \"text-base px-4 py-2\";\n  return (\n    <button className={`${base} ${variantClass} ${sizeClass} ${className}`} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport { Button }; "],"names":[],"mappings":";;;;;AAQA,MAAM,SAAgC,CAAC,EACrC,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,YAAY,EAAE,EACd,QAAQ,EACR,GAAG,OACJ;IACC,IAAI,OAAO;IACX,IAAI,eACF,YAAY,YACR,8DACA;IACN,IAAI,YACF,SAAS,OACL,sBACA,SAAS,OACT,sBACA;IACN,qBACE,8OAAC;QAAO,WAAW,GAAG,KAAK,CAAC,EAAE,aAAa,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW;QAAG,GAAG,KAAK;kBAC9E;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/subhash/tbi/tbi-website/src/components/Card.tsx"],"sourcesContent":["import React, { ReactNode, HTMLAttributes } from \"react\";\n\ninterface CardProps extends HTMLAttributes<HTMLDivElement> {\n  className?: string;\n  children?: ReactNode;\n}\n\nconst Card = ({ className = \"\", ...props }: CardProps) => (\n  <div className={`bg-white rounded-lg shadow ${className}`} {...props} />\n);\n\nconst CardHeader = ({ className = \"\", ...props }: CardProps) => (\n  <div className={`p-4 border-b ${className}`} {...props} />\n);\n\ninterface CardTitleProps {\n  className?: string;\n  children?: ReactNode;\n}\nconst CardTitle = ({ className = \"\", children }: CardTitleProps) => (\n  <h3 className={`text-xl font-bold mb-2 ${className}`}>{children}</h3>\n);\n\ninterface CardDescriptionProps {\n  className?: string;\n  children?: ReactNode;\n}\nconst CardDescription = ({ className = \"\", children }: CardDescriptionProps) => (\n  <p className={`text-gray-500 text-sm mb-2 ${className}`}>{children}</p>\n);\n\nconst CardContent = ({ className = \"\", ...props }: CardProps) => (\n  <div className={`p-4 ${className}`} {...props} />\n);\n\nexport { Card, CardHeader, CardTitle, CardDescription, CardContent }; "],"names":[],"mappings":";;;;;;;;;AAOA,MAAM,OAAO,CAAC,EAAE,YAAY,EAAE,EAAE,GAAG,OAAkB,iBACnD,8OAAC;QAAI,WAAW,CAAC,2BAA2B,EAAE,WAAW;QAAG,GAAG,KAAK;;;;;;AAGtE,MAAM,aAAa,CAAC,EAAE,YAAY,EAAE,EAAE,GAAG,OAAkB,iBACzD,8OAAC;QAAI,WAAW,CAAC,aAAa,EAAE,WAAW;QAAG,GAAG,KAAK;;;;;;AAOxD,MAAM,YAAY,CAAC,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAkB,iBAC7D,8OAAC;QAAG,WAAW,CAAC,uBAAuB,EAAE,WAAW;kBAAG;;;;;;AAOzD,MAAM,kBAAkB,CAAC,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAwB,iBACzE,8OAAC;QAAE,WAAW,CAAC,2BAA2B,EAAE,WAAW;kBAAG;;;;;;AAG5D,MAAM,cAAc,CAAC,EAAE,YAAY,EAAE,EAAE,GAAG,OAAkB,iBAC1D,8OAAC;QAAI,WAAW,CAAC,IAAI,EAAE,WAAW;QAAG,GAAG,KAAK","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/subhash/tbi/tbi-website/src/components/Accordion.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Accordion = registerClientReference(\n    function() { throw new Error(\"Attempted to call Accordion() from the server but Accordion is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Accordion.tsx <module evaluation>\",\n    \"Accordion\",\n);\nexport const AccordionContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionContent() from the server but AccordionContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Accordion.tsx <module evaluation>\",\n    \"AccordionContent\",\n);\nexport const AccordionItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionItem() from the server but AccordionItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Accordion.tsx <module evaluation>\",\n    \"AccordionItem\",\n);\nexport const AccordionTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionTrigger() from the server but AccordionTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Accordion.tsx <module evaluation>\",\n    \"AccordionTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,8DACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,8DACA","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/subhash/tbi/tbi-website/src/components/Accordion.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Accordion = registerClientReference(\n    function() { throw new Error(\"Attempted to call Accordion() from the server but Accordion is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Accordion.tsx\",\n    \"Accordion\",\n);\nexport const AccordionContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionContent() from the server but AccordionContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Accordion.tsx\",\n    \"AccordionContent\",\n);\nexport const AccordionItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionItem() from the server but AccordionItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Accordion.tsx\",\n    \"AccordionItem\",\n);\nexport const AccordionTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionTrigger() from the server but AccordionTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Accordion.tsx\",\n    \"AccordionTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,0CACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,0CACA","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///Users/subhash/tbi/tbi-website/src/app/preincubation/page.tsx"],"sourcesContent":["import PreIncubationPage from \"@/components/PreIncubationPage\";\n\nexport default function PreIncubation() {\n  return <PreIncubationPage />;\n} "],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,8OAAC,uIAAA,CAAA,UAAiB;;;;;AAC3B","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///Users/subhash/tbi/tbi-website/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///Users/subhash/tbi/tbi-website/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAOhG,iCAAiC;;;;;;;;;;;;IAI/BM,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,sCAA0C;YAAE,QAAA;YAAA,eAAwB;YAAA;gBAAsB,EAAC,UAAA;oBAAA;oBAAA,CAEzG;oBAAA,yDAA4D;wBAC5D,KAAO,KAAA,CAAMC;wBAAAA,QAAc;4BAAA,GAAIX,CAAAA,gBAAmB;4BAAA;yBAAA;;mBAChDY,YAAY;;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;YAAA;SAAA;;SACNC,UAAU;cACV,IAAA;YAAA,MAAA,4BAA2C;iBAC3CC,MAAAA,MAAY,EAAA;wBAAA;4BACZC,KAAAA,CAAAA,GAAAA,EAAU,0MAAVA,CAAAA,sBAAU,EAAA,MAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,6SAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACVC,OAAAA,iTAAU,EAAE,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,6SAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACd,MAAA,CAAA,YAAA,CAAA;wBACAC;qBAAAA,MAAU;gBACRC,YAAYnB;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,YAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0],"debugId":null}}]
}